{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport React, { useEffect, useState, Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { styles } from \"./styles\";\nimport axios from 'axios';\nimport moment from 'moment';\nvar API_URL = 'https://holidays-jp.github.io/api/v1/date.json';\nvar url_01 = 'https://www.sakurajima-kinkowan-geo.jp/';\nvar url_02 = 'https://onjunpenguin.com/';\nvar openLink = function openLink(url) {\n  Linking.openURL(url).catch(function (err) {\n    return console.error('Failed to open link:', err);\n  });\n};\nvar peakSeason_prePost = [\"2023-08-11\", \"2023-08-15\"];\nvar isPrePost = peakSeason_prePost.includes(moment().format('YYYY-MM-DD'));\nvar peakSeason = [\"2023-08-12\", \"2023-08-13\", \"2023-08-14\"];\nvar isPeak = peakSeason.includes(moment().format('YYYY-MM-DD'));\nvar isWeekEnd = moment().format('d') % 6 == 0 ? true : false;\nimport ferryTimetable from \"../timeTable.json\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar getNextDeparture = function getNextDeparture(schedule, currentTime) {\n  var currentMoment = moment(currentTime, 'HH:mm');\n  var nextDepartureTime = schedule.find(function (time) {\n    return moment(time, 'HH:mm') > currentMoment;\n  });\n  return nextDepartureTime || schedule[0];\n};\nvar getFollowingDeparture = function getFollowingDeparture(schedule, currentTime) {\n  var currentMoment = moment(currentTime, 'HH:mm');\n  var nextDepartureTime = schedule.find(function (time) {\n    return moment(time, 'HH:mm') > currentMoment;\n  });\n  var followingDepartureTime = schedule.find(function (time) {\n    return moment(time, 'HH:mm') > moment(nextDepartureTime, 'HH:mm');\n  });\n  return followingDepartureTime || schedule[1];\n};\nvar sortSchedule = function sortSchedule(schedule, currentTime) {\n  var currentMoment = moment(currentTime, 'HH:mm');\n  var todaySchedule = schedule.filter(function (time) {\n    return moment(time, 'HH:mm') >= currentMoment;\n  });\n  var nextDaySchedule = schedule.filter(function (time) {\n    return moment(time, 'HH:mm') < currentMoment;\n  });\n  return [].concat(_toConsumableArray(todaySchedule), _toConsumableArray(nextDaySchedule));\n};\nvar App = function App(props) {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentTime = _useState2[0],\n    setCurrentTime = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    nextDepartureSakurajima = _useState4[0],\n    setNextDepartureSakurajima = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    nextDepartureKagoshima = _useState6[0],\n    setNextDepartureKagoshima = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    followingDepartureSakurajima = _useState8[0],\n    setFollowingDepartureSakurajima = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    followingDepartureKagoshima = _useState10[0],\n    setFollowingDepartureKagoshima = _useState10[1];\n  var _useState11 = useState({}),\n    _useState12 = _slicedToArray(_useState11, 2),\n    holidaysData = _useState12[0],\n    setHolidaysData = _useState12[1];\n  useEffect(function () {\n    var getCurrentTime = function getCurrentTime() {\n      var now = moment().format('HH:mm:ss');\n      setCurrentTime(now);\n    };\n    getCurrentTime();\n    var timer = setInterval(function () {\n      getCurrentTime();\n    }, 1000);\n    return function () {\n      clearInterval(timer);\n    };\n  }, []);\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var response = yield axios.get(API_URL);\n          setHolidaysData(response.data);\n        } catch (error) {\n          console.error('Error fetching holidays data:', error);\n        }\n      });\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchData();\n    var fetchHolidaysTimer = setInterval(function () {\n      fetchData();\n    }, 6 * 60 * 60 * 1000);\n    return function () {\n      clearInterval(fetchHolidaysTimer);\n    };\n  }, []);\n  useEffect(function () {\n    var isHoliday = holidaysData.hasOwnProperty(moment().format('YYYY-MM-DD'));\n    var scheduleType = '平日';\n    if (isHoliday || isWeekEnd) {\n      scheduleType = '土日祝日';\n    } else if (isPeak) {\n      scheduleType = '繁忙期_1';\n    } else if (isPrePost) {\n      scheduleType = '繁忙期_2';\n    }\n    var sakurajimaSchedule = ferryTimetable[\"桜島港\"][scheduleType];\n    var kagoshimaSchedule = ferryTimetable[\"鹿児島港\"][scheduleType];\n    var sortedSakurajimaSchedule = sortSchedule(sakurajimaSchedule, currentTime);\n    var sortedKagoshimaSchedule = sortSchedule(kagoshimaSchedule, currentTime);\n    var nextDepartureSakurajima = getNextDeparture(sortedSakurajimaSchedule, currentTime);\n    var nextDepartureKagoshima = getNextDeparture(sortedKagoshimaSchedule, currentTime);\n    var followingDepartureSakurajima = getFollowingDeparture(sortedSakurajimaSchedule, currentTime);\n    var followingDepartureKagoshima = getFollowingDeparture(sortedKagoshimaSchedule, currentTime);\n    setNextDepartureSakurajima(nextDepartureSakurajima);\n    setNextDepartureKagoshima(nextDepartureKagoshima);\n    setFollowingDepartureSakurajima(followingDepartureSakurajima);\n    setFollowingDepartureKagoshima(followingDepartureKagoshima);\n  }, [currentTime, holidaysData]);\n  return _jsx(SafeAreaView, {\n    style: styles.safeArea,\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.container,\n      children: [_jsxs(Text, {\n        style: styles.currentTime,\n        children: [\"\\u73FE\\u5728: \", currentTime]\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          props.navigation.navigate('鹿児島港発');\n        },\n        children: _jsxs(View, {\n          style: styles.kagoFrame,\n          children: [_jsx(Text, {\n            style: [styles.portTitle, styles.bottomColumn],\n            children: \"\\u9E7F\\u5150\\u5CF6\\u6E2F\\u767A\"\n          }), _jsxs(Text, {\n            style: styles.nextDeparture,\n            children: [\"\\u5148\\u767A:\", nextDepartureKagoshima]\n          }), _jsxs(Text, {\n            style: styles.nextDeparture,\n            children: [\"\\u6B21\\u767A:\", followingDepartureKagoshima]\n          })]\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          props.navigation.navigate('桜島港発');\n        },\n        children: _jsxs(View, {\n          style: styles.sakuraFrame,\n          children: [_jsx(Text, {\n            style: [styles.portTitle, styles.bottomColumn],\n            children: \"\\u685C\\u5CF6\\u6E2F\\u767A\"\n          }), _jsxs(Text, {\n            style: styles.nextDeparture,\n            children: [\"\\u5148\\u767A:\", nextDepartureSakurajima]\n          }), _jsxs(Text, {\n            style: styles.nextDeparture,\n            children: [\"\\u6B21\\u767A:\", followingDepartureSakurajima]\n          })]\n        })\n      }), _jsx(View, {\n        style: styles.headLineNews,\n        children: _jsx(Text, {\n          children: \"\\u51FA\\u767A\\u6E2F\\u3092\\u30BF\\u30C3\\u30D7\\u3059\\u308B\\u3068\\u8A73\\u7D30\\u304C\\u8868\\u793A\\u3055\\u308C\\u307E\\u3059\\u3002\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return openLink(url_02);\n        },\n        style: styles.linkButtonTop,\n        children: _jsx(Image, {\n          source: require(\"../assets/GENTOO_PENGUIN_SAKURAJIMA_WORKSHOP.png\"),\n          style: styles.linkButtonImage\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return openLink(url_01);\n        },\n        style: styles.linkButton,\n        children: _jsx(Text, {\n          style: styles.linkButtonText,\n          children: \"\\u5E83\\u544A\\u4E3B\\u69D8\\u52DF\\u96C6\\u4E2D\\uFF01\\uFF01\"\n        })\n      })]\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","Component","View","Text","TouchableOpacity","Image","StyleSheet","SafeAreaView","ScrollView","Linking","Animated","styles","axios","moment","API_URL","url_01","url_02","openLink","url","openURL","catch","err","console","error","peakSeason_prePost","isPrePost","includes","format","peakSeason","isPeak","isWeekEnd","ferryTimetable","jsxs","_jsxs","jsx","_jsx","getNextDeparture","schedule","currentTime","currentMoment","nextDepartureTime","find","time","getFollowingDeparture","followingDepartureTime","sortSchedule","todaySchedule","filter","nextDaySchedule","concat","_toConsumableArray","App","props","_useState","_useState2","_slicedToArray","setCurrentTime","_useState3","_useState4","nextDepartureSakurajima","setNextDepartureSakurajima","_useState5","_useState6","nextDepartureKagoshima","setNextDepartureKagoshima","_useState7","_useState8","followingDepartureSakurajima","setFollowingDepartureSakurajima","_useState9","_useState10","followingDepartureKagoshima","setFollowingDepartureKagoshima","_useState11","_useState12","holidaysData","setHolidaysData","getCurrentTime","now","timer","setInterval","clearInterval","fetchData","_ref","_asyncToGenerator","response","get","data","apply","arguments","fetchHolidaysTimer","isHoliday","hasOwnProperty","scheduleType","sakurajimaSchedule","kagoshimaSchedule","sortedSakurajimaSchedule","sortedKagoshimaSchedule","style","safeArea","children","contentContainerStyle","container","onPress","navigation","navigate","kagoFrame","portTitle","bottomColumn","nextDeparture","sakuraFrame","headLineNews","linkButtonTop","source","require","linkButtonImage","linkButton","linkButtonText"],"sources":["C:/Users/Kirishima/SakuraFerry01/SakuraPJ/screens/MainScreen.js"],"sourcesContent":["import React, { useEffect, useState, Component } from 'react';\nimport {\n  View, Text, TouchableOpacity, Image, StyleSheet, SafeAreaView, ScrollView, Linking, Animated \n} from 'react-native';\nimport { styles } from './styles'; // 新しく作成したstyles.jsファイルをインポート\n\nimport axios from 'axios';\nimport moment from 'moment';\n\nconst API_URL = 'https://holidays-jp.github.io/api/v1/date.json';\nconst url_01 = 'https://www.sakurajima-kinkowan-geo.jp/';\nconst url_02 = 'https://onjunpenguin.com/';\n\nconst openLink = (url) => {\n  Linking.openURL(url).catch(err => console.error('Failed to open link:', err));\n};\n\nconst peakSeason_prePost = [\"2023-08-11\", \"2023-08-15\"];\nconst isPrePost = peakSeason_prePost.includes(moment().format('YYYY-MM-DD'));\nconst peakSeason = [\"2023-08-12\", \"2023-08-13\", \"2023-08-14\"];\nconst isPeak = peakSeason.includes(moment().format('YYYY-MM-DD'));\n\nconst isWeekEnd = moment().format('d') % 6 == 0 ? true : false;\n\n// 桜島港と鹿児島港の平日と土日祝日の出発時刻データ\nimport ferryTimetable from '../timeTable.json';\n\n// 出発時刻の探索関数 (先発と次発を探す)\nconst getNextDeparture = (schedule, currentTime) => {\n  const currentMoment = moment(currentTime, 'HH:mm');\n  const nextDepartureTime = schedule.find(time => moment(time, 'HH:mm') > currentMoment);\n  return nextDepartureTime || schedule[0]; // 最終便が終わった場合は翌日の最初の便を表示\n};\n\n// 次の次の出発時刻を探す関数\nconst getFollowingDeparture = (schedule, currentTime) => {\n  const currentMoment = moment(currentTime, 'HH:mm');\n  const nextDepartureTime = schedule.find(time => moment(time, 'HH:mm') > currentMoment);\n  const followingDepartureTime  = schedule.find(time => moment(time, 'HH:mm') > moment(nextDepartureTime, 'HH:mm'));\n  return followingDepartureTime  || schedule[1]; // 最終便が終わった場合は翌日の2番目の便を表示\n};\n\n// 時刻表を現在時刻を基準に並び替える関数\nconst sortSchedule = (schedule, currentTime) => {\n  const currentMoment = moment(currentTime, 'HH:mm');\n  const todaySchedule = schedule.filter(time => moment(time, 'HH:mm') >= currentMoment);\n  const nextDaySchedule = schedule.filter(time => moment(time, 'HH:mm') < currentMoment);\n\n  return [...todaySchedule, ...nextDaySchedule];\n};\n\nconst App = (props) => { // propsを引数として受け取る  // 状態変数の定義\n  // 状態変数の定義\n  const [currentTime, setCurrentTime] = useState('');\n  const [nextDepartureSakurajima, setNextDepartureSakurajima] = useState('');\n  const [nextDepartureKagoshima, setNextDepartureKagoshima] = useState('');\n  const [followingDepartureSakurajima, setFollowingDepartureSakurajima] = useState('');\n  const [followingDepartureKagoshima, setFollowingDepartureKagoshima] = useState('');\n  const [holidaysData, setHolidaysData] = useState({});\n\n  // 現在時刻を1秒ごとに更新するタイマーを設定する\n  useEffect(() => {\n    const getCurrentTime = () => {\n      const now = moment().format('HH:mm:ss');\n      setCurrentTime(now);\n    };\n\n    getCurrentTime();\n\n    const timer = setInterval(() => {\n      getCurrentTime();\n    }, 1000);\n\n    // タイマーをクリーンアップする\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  // 祝日の判定を行うタイマーと初回のAPIリクエストを設定する\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(API_URL);\n        setHolidaysData(response.data);\n      } catch (error) {\n        console.error('Error fetching holidays data:', error);\n      }\n    };\n\n    // 起動時に一度だけAPIリクエストを行う\n    fetchData();\n\n    // 6時間ごとにAPIリクエストを行うタイマーを設定\n    const fetchHolidaysTimer = setInterval(() => {\n      fetchData();\n    }, 6 * 60 * 60 * 1000); // 6時間\n\n    // タイマーをクリーンアップする\n    return () => {\n      clearInterval(fetchHolidaysTimer);\n    };\n  }, []);\n\n  // 時刻表の更新と表示を行う\n  useEffect(() => {\n    const isHoliday = holidaysData.hasOwnProperty(moment().format('YYYY-MM-DD'));\n    \n     // 使用するダイヤの種類を選択する\n    let scheduleType = '平日';\n    if (isHoliday||isWeekEnd) {\n      scheduleType = '土日祝日';\n    } else if (isPeak) {\n      scheduleType = '繁忙期_1';\n    } else if (isPrePost) {\n      scheduleType = '繁忙期_2';\n    }\n\n    // ダイヤのスケジュールを取得\n    const sakurajimaSchedule = ferryTimetable[\"桜島港\"][scheduleType];\n    const kagoshimaSchedule = ferryTimetable[\"鹿児島港\"][scheduleType];\n\n    // 時刻表を現在時刻を基準に並び替える\n    const sortedSakurajimaSchedule = sortSchedule(sakurajimaSchedule, currentTime);\n    const sortedKagoshimaSchedule = sortSchedule(kagoshimaSchedule, currentTime);\n    \n    // 先発と次発の出発時刻を取得\n    const nextDepartureSakurajima = getNextDeparture(sortedSakurajimaSchedule, currentTime);\n    const nextDepartureKagoshima = getNextDeparture(sortedKagoshimaSchedule, currentTime);\n    \n    // 次の次の出発時刻を取得\n    const followingDepartureSakurajima = getFollowingDeparture(sortedSakurajimaSchedule, currentTime);\n    const followingDepartureKagoshima = getFollowingDeparture(sortedKagoshimaSchedule, currentTime);\n    \n    // 状態変数を更新する\n    setNextDepartureSakurajima(nextDepartureSakurajima);\n    setNextDepartureKagoshima(nextDepartureKagoshima);\n    setFollowingDepartureSakurajima(followingDepartureSakurajima);\n    setFollowingDepartureKagoshima(followingDepartureKagoshima);\n  }, [currentTime, holidaysData]);\n\n  return (\n  \n  \n  \n  <SafeAreaView style={styles.safeArea}>\n    <ScrollView contentContainerStyle={styles.container}>\n      <Text style={styles.currentTime}>現在: {currentTime}</Text>\n      \n      {/* メイン画面から鹿児島港発画面に遷移するフレーム */}\n      <TouchableOpacity\n        onPress={() => {\n          props.navigation.navigate('鹿児島港発'); // 遷移先の画面名を指定\n        }}\n      >\n      <View style={styles.kagoFrame}>\n        <Text style={[styles.portTitle, styles.bottomColumn]}>鹿児島港発</Text>\n        <Text style={styles.nextDeparture}>先発:{nextDepartureKagoshima}</Text>\n        <Text style={styles.nextDeparture}>次発:{followingDepartureKagoshima}</Text>\n      </View>\n      </TouchableOpacity>\n\n      {/* メイン画面から桜島港発画面に遷移するフレーム */}\n      <TouchableOpacity\n        onPress={() => {\n          props.navigation.navigate('桜島港発'); // 遷移先の画面名を指定\n        }}\n      >\n      <View style={styles.sakuraFrame}>\n        <Text style={[styles.portTitle, styles.bottomColumn]}>桜島港発</Text>\n        <Text style={styles.nextDeparture}>先発:{nextDepartureSakurajima}</Text>\n        <Text style={styles.nextDeparture}>次発:{followingDepartureSakurajima}</Text>\n      </View>\n      </TouchableOpacity>\n      \n      \n      \n      \n      \n      <View style={styles.headLineNews}>\n        <Text>出発港をタップすると詳細が表示されます。</Text>\n      \n      </View>\n      \n      \n      \n      \n      \n      \n      \n      \n        <TouchableOpacity onPress={() => openLink(url_02)} style={styles.linkButtonTop}>\n          <Image\n            source={require('../assets/GENTOO_PENGUIN_SAKURAJIMA_WORKSHOP.png')} // 画像ファイルのパスを指定\n            style={styles.linkButtonImage}\n          />\n        </TouchableOpacity>\n        \n        <TouchableOpacity onPress={() => openLink(url_01)} style={styles.linkButton}>\n        <Text style={styles.linkButtonText}>広告主様募集中！！</Text>\n        </TouchableOpacity>\n    </ScrollView>\n  </SafeAreaView>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}